{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","arguments","length","undefined","action","type","_objectSpread","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchData","async","dispatch","getState","methods","call","err","console","log","fetchDataFailed","connectFailed","updateAccount","Screen","styled","div","_templateObject","_taggedTemplateLiteral","_ref","image","concat","SpacerXSmall","_templateObject2","SpacerSmall","_templateObject3","SpacerMedium","_templateObject4","SpacerLarge","_templateObject5","Container","_templateObject6","_ref2","flex","_ref3","fd","_ref4","jc","_ref5","ai","_ref6","test","_ref7","TextTitle","p","_templateObject7","TextDescription","_templateObject8","_templateObject9","_templateObject0","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledImg","StyledLink","a","App","useDispatch","useSelector","claimingNft","setClaimingNft","useState","feedback","setFeedback","amount","setamount","CONFIG","SET_CONFIG","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","getData","useEffect","configResponse","fetch","headers","Accept","config","json","getConfig","_jsx","s","children","_jsxs","style","padding","backgroundColor","alt","src","borderRadius","border","boxShadow","textAlign","fontSize","fontWeight","color","target","href","input","len","substring","Number","_Fragment","onClick","e","preventDefault","abiResponse","abi","ethereum","window","isMetaMask","Web3EthContract","setProvider","Web3","accounts","request","method","SmartContractObj","on","location","reload","lineHeight","disabled","decrementamount","newamount","incrementamount","claimNFTs","gasLimit","totalCostWei","String","totalGasLimit","publicMint","send","to","from","value","once","then","receipt","transform","width","truncate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.504037ed.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalSupply: action.payload.totalSupply,\r\n        // cost: action.payload.cost,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      // let cost = await store\r\n      //   .getState()\r\n      //   .blockchain.smartContract.methods.cost()\r\n      //   .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          totalSupply,\r\n          // cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const abiResponse = await fetch(\"/config/abi.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const abi = await abiResponse.json();\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const CONFIG = await configResponse.json();\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        if (networkId == CONFIG.NETWORK.ID) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            abi,\r\n            CONFIG.CONTRACT_ADDRESS\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--primary);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 18px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\n\r\nconst truncate = (input, len) =>\r\n  input.length > len ? `${input.substring(0, len)}...` : input;\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 50px;\r\n  border: none;\r\n  background-color: var(--secondary);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  color: var(--secondary-text);\r\n  width: 100px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const StyledRoundButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 100%;\r\n  border: none;\r\n  background-color: var(--primary);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  color: var(--primary-text);\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledLogo = styled.img`\r\n  width: 200px;\r\n  @media (min-width: 767px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\r\n  border: 4px dashed var(--secondary);\r\n  background-color: var(--accent);\r\n  border-radius: 100%;\r\n  width: 200px;\r\n  @media (min-width: 900px) {\r\n    width: 250px;\r\n  }\r\n  @media (min-width: 1000px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  color: var(--secondary);\r\n  text-decoration: none;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [feedback, setFeedback] = useState(`Click SHAPE to mint your NFT.`);\r\n  const [amount, setamount] = useState(1);\r\n  const [CONFIG, SET_CONFIG] = useState({\r\n    CONTRACT_ADDRESS: \"\",\r\n    SCAN_LINK: \"\",\r\n    NETWORK: {\r\n      NAME: \"\",\r\n      SYMBOL: \"\",\r\n      ID: 0,\r\n    },\r\n    NFT_NAME: \"\",\r\n    SYMBOL: \"\",\r\n    MAX_SUPPLY: 1,\r\n    WEI_COST: 0,\r\n    DISPLAY_COST: 0,\r\n    GAS_LIMIT: 0,\r\n    MARKETPLACE: \"\",\r\n    MARKETPLACE_LINK: \"\",\r\n    SHOW_BACKGROUND: false,\r\n  });\r\n\r\n  const claimNFTs = () => {\r\n    let cost = CONFIG.WEI_COST;\r\n    let gasLimit = CONFIG.GAS_LIMIT;\r\n    let totalCostWei = String(cost * amount);\r\n    let totalGasLimit = String(gasLimit * amount);\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .publicMint(amount)\r\n      .send({\r\n        gasLimit: String(totalGasLimit),\r\n        to: CONFIG.CONTRACT_ADDRESS,\r\n        from: blockchain.account,\r\n        value: totalCostWei,\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"uhm, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n        setFeedback(\r\n          `Congrats, you made ${CONFIG.NFT_NAME} shard(s)! Visit Opensea.io to view it.`\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const decrementamount = () => {\r\n    let newamount = amount - 1;\r\n    if (newamount < 1) {\r\n      newamount = 1;\r\n    }\r\n    setamount(newamount);\r\n  };\r\n\r\n  const incrementamount = () => {\r\n    let newamount = amount + 1;\r\n    if (newamount > 10) {\r\n      newamount = 10;\r\n    }\r\n    setamount(newamount);\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  const getConfig = async () => {\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const config = await configResponse.json();\r\n    SET_CONFIG(config);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    <s.Screen>\r\n      <s.Container\r\n        flex={1}\r\n        ai={\"center\"}\r\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\r\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\r\n      >\r\n        <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\r\n        <s.SpacerSmall />\r\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n            <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\r\n          </s.Container>\r\n          <s.SpacerLarge />\r\n          <s.Container\r\n            flex={2}\r\n            jc={\"center\"}\r\n            ai={\"center\"}\r\n            style={{\r\n              backgroundColor: \"var(--accent)\",\r\n              padding: 24,\r\n              borderRadius: 24,\r\n              border: \"4px dashed var(--secondary)\",\r\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\r\n            }}\r\n          >\r\n            <s.TextTitle\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontSize: 50,\r\n                fontWeight: \"bold\",\r\n                color: \"var(--accent-text)\",\r\n              }}\r\n            >\r\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\r\n            </s.TextTitle>\r\n            <s.TextDescription\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"var(--primary-text)\",\r\n              }}\r\n            >\r\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\r\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\r\n              </StyledLink>\r\n            </s.TextDescription>\r\n            <s.SpacerSmall />\r\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\r\n              <>\r\n                <s.TextTitle\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  The sale has ended.\r\n                </s.TextTitle>\r\n                <s.TextDescription\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  You can still find {CONFIG.NFT_NAME} on\r\n                </s.TextDescription>\r\n                <s.SpacerSmall />\r\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\r\n                  {CONFIG.MARKETPLACE}\r\n                </StyledLink>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <s.TextTitle\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\r\n                  {CONFIG.NETWORK.SYMBOL}.\r\n                </s.TextTitle>\r\n                <s.SpacerXSmall />\r\n                <s.TextDescription\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  Excluding gas fees.\r\n                </s.TextDescription>\r\n                <s.SpacerSmall />\r\n                {blockchain.account === \"\" ||\r\n                blockchain.smartContract === null ? (\r\n                  <s.Container ai={\"center\"} jc={\"center\"}>\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--accent-text)\",\r\n                      }}\r\n                    >\r\n                      Connect to the {CONFIG.NETWORK.NAME} network\r\n                    </s.TextDescription>\r\n                    <s.SpacerSmall />\r\n                    <StyledButton\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      CONNECT\r\n                    </StyledButton>\r\n                    {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <s.TextDescription\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            color: \"var(--accent-text)\",\r\n                          }}\r\n                        >\r\n                          {blockchain.errorMsg}\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null}\r\n                  </s.Container>\r\n                ) : (\r\n                  <>\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--accent-text)\",\r\n                      }}\r\n                    >\r\n                      {feedback}\r\n                    </s.TextDescription>\r\n                    <s.SpacerMedium />\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <StyledRoundButton\r\n                        style={{ lineHeight: 0.4 }}\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          decrementamount();\r\n                        }}\r\n                      >\r\n                        -\r\n                      </StyledRoundButton>\r\n                      <s.SpacerMedium />\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: \"var(--accent-text)\",\r\n                        }}\r\n                      >\r\n                        {amount}\r\n                      </s.TextDescription>\r\n                      <s.SpacerMedium />\r\n                      <StyledRoundButton\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          incrementamount();\r\n                        }}\r\n                      >\r\n                        +\r\n                      </StyledRoundButton>\r\n                    </s.Container>\r\n                    <s.SpacerSmall />\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <StyledButton\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          claimNFTs();\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        {claimingNft ? \"MAKING SHAPES!\" : \"SHAPE\"}\r\n                      </StyledButton>\r\n                    </s.Container>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            <s.SpacerMedium />\r\n          </s.Container>\r\n          <s.SpacerLarge />\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n            <StyledImg\r\n              alt={\"example\"}\r\n              src={\"/config/images/example.gif\"}\r\n              style={{ transform: \"scaleX(-1)\" }}\r\n            />\r\n          </s.Container>\r\n        </ResponsiveWrapper>\r\n        <s.SpacerMedium />\r\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\r\n          <s.TextDescription\r\n            style={{\r\n              textAlign: \"center\",\r\n              color: \"var(--primary-text)\",\r\n            }}\r\n          >\r\n            Please make sure you are connected to \r\n            SHAPE Network.\r\n          </s.TextDescription>\r\n          <s.SpacerSmall />\r\n          <s.TextDescription\r\n            style={{\r\n              textAlign: \"center\",\r\n              color: \"var(--primary-text)\",\r\n            }}\r\n          >\r\n            Minting RCSG generates Gasback Fees. See more at: gasback.shape.network.\r\n          </s.TextDescription>\r\n        </s.Container>\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}